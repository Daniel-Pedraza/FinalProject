// <auto-generated />
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515145953_SeedInit")]
    partial class SeedInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("FinalProject.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PricingID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContactID");

                    b.HasIndex("MemberID");

                    b.HasIndex("PricingID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FinalProject.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("FinalProject.Models.MemberContact", b =>
                {
                    b.Property<int>("ContactID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemberID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContactID", "MemberID");

                    b.HasIndex("MemberID");

                    b.ToTable("MemberContacts");
                });

            modelBuilder.Entity("FinalProject.Models.Pricing", b =>
                {
                    b.Property<int>("PricingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PricingID");

                    b.ToTable("Pricings");
                });

            modelBuilder.Entity("FinalProject.Models.Contact", b =>
                {
                    b.HasOne("FinalProject.Models.Member", "Member")
                        .WithMany("Contacts")
                        .HasForeignKey("MemberID");

                    b.HasOne("FinalProject.Models.Pricing", "Pricing")
                        .WithMany("Contacts")
                        .HasForeignKey("PricingID");

                    b.Navigation("Member");

                    b.Navigation("Pricing");
                });

            modelBuilder.Entity("FinalProject.Models.MemberContact", b =>
                {
                    b.HasOne("FinalProject.Models.Contact", "Contact")
                        .WithMany("MemberContacts")
                        .HasForeignKey("ContactID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Member", "Member")
                        .WithMany("MemberContacts")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("FinalProject.Models.Contact", b =>
                {
                    b.Navigation("MemberContacts");
                });

            modelBuilder.Entity("FinalProject.Models.Member", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("MemberContacts");
                });

            modelBuilder.Entity("FinalProject.Models.Pricing", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
